define(['dart_sdk', 'packages/flutter/src/material/text_form_field.dart', 'packages/flutter/src/painting/strut_style.dart', 'packages/mainul_dev/utils/colors.dart', 'packages/flutter/src/material/icon_button.dart', 'packages/flutter/src/material/input_border.dart', 'packages/flutter/src/painting/border_radius.dart', 'packages/flutter/src/painting/borders.dart', 'packages/flutter/src/painting/edge_insets.dart', 'packages/flutter/src/material/colors.dart', 'packages/flutter/src/widgets/widget_span.dart', 'packages/flutter/src/widgets/icon.dart', 'packages/flutter/src/services/text_input.dart'], (function load__packages__mainul_dev__widgets__text_form_field_dart(dart_sdk, packages__flutter__src__material__text_form_field$46dart, packages__flutter__src__painting__strut_style$46dart, packages__mainul_dev__utils__colors$46dart, packages__flutter__src__material__icon_button$46dart, packages__flutter__src__material__input_border$46dart, packages__flutter__src__painting__border_radius$46dart, packages__flutter__src__painting__borders$46dart, packages__flutter__src__painting__edge_insets$46dart, packages__flutter__src__material__colors$46dart, packages__flutter__src__widgets__widget_span$46dart, packages__flutter__src__widgets__icon$46dart, packages__flutter__src__services__text_input$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const ui = dart_sdk.ui;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const text_form_field = packages__flutter__src__material__text_form_field$46dart.src__material__text_form_field;
  const text_style = packages__flutter__src__painting__strut_style$46dart.src__painting__text_style;
  const colors = packages__mainul_dev__utils__colors$46dart.utils__colors;
  const input_decorator = packages__flutter__src__material__icon_button$46dart.src__material__input_decorator;
  const icon_button = packages__flutter__src__material__icon_button$46dart.src__material__icon_button;
  const input_border = packages__flutter__src__material__input_border$46dart.src__material__input_border;
  const border_radius = packages__flutter__src__painting__border_radius$46dart.src__painting__border_radius;
  const borders = packages__flutter__src__painting__borders$46dart.src__painting__borders;
  const edge_insets = packages__flutter__src__painting__edge_insets$46dart.src__painting__edge_insets;
  const colors$ = packages__flutter__src__material__colors$46dart.src__material__colors;
  const widget_inspector = packages__flutter__src__widgets__widget_span$46dart.src__widgets__widget_inspector;
  const framework = packages__flutter__src__widgets__widget_span$46dart.src__widgets__framework;
  const icon = packages__flutter__src__widgets__icon$46dart.src__widgets__icon;
  const text_input = packages__flutter__src__services__text_input$46dart.src__services__text_input;
  var text_form_field$ = Object.create(dart.library);
  dart._checkModuleNullSafetyMode(false);
  var T = {
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    VoidToNvoid: () => (T.VoidToNvoid = dart.constFn(dart.nullable(T.VoidTovoid())))(),
    _LocationL: () => (T._LocationL = dart.constFn(dart.legacy(widget_inspector._Location)))()
  };
  var T$Eval = Object.assign({
    _: () => T$Eval
  }, T);
  var S = {
    _: () => S
  };
  var S$Eval = Object.assign({
    _: () => S$Eval
  }, S);
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C2() {
      return C[2] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "icon",
        [_Location_column]: 19,
        [_Location_line]: 89,
        [_Location_file]: null
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "color",
        [_Location_column]: 19,
        [_Location_line]: 90,
        [_Location_file]: null
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onPressed",
        [_Location_column]: 19,
        [_Location_line]: 91,
        [_Location_file]: null
      });
    },
    get C1() {
      return C[1] = dart.constList([C[2] || CT.C2, C[3] || CT.C3, C[4] || CT.C4], T._LocationL());
    },
    get C0() {
      return C[0] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[1] || CT.C1,
        [_Location_name]: null,
        [_Location_column]: 17,
        [_Location_line]: 88,
        [_Location_file]: "file:///C:/Users/Mainul/Desktop/mainul_dev/lib/widgets/text_form_field.dart"
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "initialValue",
        [_Location_column]: 7,
        [_Location_line]: 40,
        [_Location_file]: null
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "autofocus",
        [_Location_column]: 7,
        [_Location_line]: 41,
        [_Location_file]: null
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "obscureText",
        [_Location_column]: 7,
        [_Location_line]: 42,
        [_Location_file]: null
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "keyboardType",
        [_Location_column]: 7,
        [_Location_line]: 43,
        [_Location_file]: null
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "maxLength",
        [_Location_column]: 7,
        [_Location_line]: 44,
        [_Location_file]: null
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onChanged",
        [_Location_column]: 7,
        [_Location_line]: 45,
        [_Location_file]: null
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "validator",
        [_Location_column]: 7,
        [_Location_line]: 46,
        [_Location_file]: null
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "onSaved",
        [_Location_column]: 7,
        [_Location_line]: 47,
        [_Location_file]: null
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "style",
        [_Location_column]: 7,
        [_Location_line]: 48,
        [_Location_file]: null
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: null,
        [_Location_name]: "decoration",
        [_Location_column]: 7,
        [_Location_line]: 49,
        [_Location_file]: null
      });
    },
    get C6() {
      return C[6] = dart.constList([C[7] || CT.C7, C[8] || CT.C8, C[9] || CT.C9, C[10] || CT.C10, C[11] || CT.C11, C[12] || CT.C12, C[13] || CT.C13, C[14] || CT.C14, C[15] || CT.C15, C[16] || CT.C16], T._LocationL());
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_parameterLocations]: C[6] || CT.C6,
        [_Location_name]: null,
        [_Location_column]: 12,
        [_Location_line]: 39,
        [_Location_file]: "file:///C:/Users/Mainul/Desktop/mainul_dev/lib/widgets/text_form_field.dart"
      });
    }
  }, false);
  var C = Array(17).fill(void 0);
  var I = ["package:mainul_dev/widgets/text_form_field.dart"];
  var labelText$ = dart.privateName(text_form_field$, "EditText.labelText");
  var initialText$ = dart.privateName(text_form_field$, "EditText.initialText");
  var hintText$ = dart.privateName(text_form_field$, "EditText.hintText");
  var prefix$ = dart.privateName(text_form_field$, "EditText.prefix");
  var icon$ = dart.privateName(text_form_field$, "EditText.icon");
  var type$ = dart.privateName(text_form_field$, "EditText.type");
  var maxLength$ = dart.privateName(text_form_field$, "EditText.maxLength");
  var onChanged$ = dart.privateName(text_form_field$, "EditText.onChanged");
  var validator$ = dart.privateName(text_form_field$, "EditText.validator");
  var onSaved$ = dart.privateName(text_form_field$, "EditText.onSaved");
  var obscureText$ = dart.privateName(text_form_field$, "EditText.obscureText");
  var suffixIcon$ = dart.privateName(text_form_field$, "EditText.suffixIcon");
  var suffixIconPressed$ = dart.privateName(text_form_field$, "EditText.suffixIconPressed");
  var isDarkTheme$ = dart.privateName(text_form_field$, "EditText.isDarkTheme");
  var _Location_parameterLocations = dart.privateName(widget_inspector, "_Location.parameterLocations");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  text_form_field$.EditText = class EditText extends framework.StatelessWidget {
    get labelText() {
      return this[labelText$];
    }
    set labelText(value) {
      super.labelText = value;
    }
    get initialText() {
      return this[initialText$];
    }
    set initialText(value) {
      super.initialText = value;
    }
    get hintText() {
      return this[hintText$];
    }
    set hintText(value) {
      super.hintText = value;
    }
    get prefix() {
      return this[prefix$];
    }
    set prefix(value) {
      super.prefix = value;
    }
    get icon() {
      return this[icon$];
    }
    set icon(value) {
      super.icon = value;
    }
    get type() {
      return this[type$];
    }
    set type(value) {
      super.type = value;
    }
    get maxLength() {
      return this[maxLength$];
    }
    set maxLength(value) {
      super.maxLength = value;
    }
    get onChanged() {
      return this[onChanged$];
    }
    set onChanged(value) {
      super.onChanged = value;
    }
    get validator() {
      return this[validator$];
    }
    set validator(value) {
      super.validator = value;
    }
    get onSaved() {
      return this[onSaved$];
    }
    set onSaved(value) {
      super.onSaved = value;
    }
    get obscureText() {
      return this[obscureText$];
    }
    set obscureText(value) {
      super.obscureText = value;
    }
    get suffixIcon() {
      return this[suffixIcon$];
    }
    set suffixIcon(value) {
      super.suffixIcon = value;
    }
    get suffixIconPressed() {
      return this[suffixIconPressed$];
    }
    set suffixIconPressed(value) {
      super.suffixIconPressed = value;
    }
    get isDarkTheme() {
      return this[isDarkTheme$];
    }
    set isDarkTheme(value) {
      super.isDarkTheme = value;
    }
    build(context) {
      return new text_form_field.TextFormField.new({initialValue: this.initialText, autofocus: false, obscureText: this.obscureText, keyboardType: this.type, maxLength: this.maxLength, onChanged: this.onChanged, validator: this.validator, onSaved: this.onSaved, style: new text_style.TextStyle.new({color: colors.colorWhite}), decoration: new input_decorator.InputDecoration.new({focusedBorder: new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.circular(2), borderSide: new borders.BorderSide.new({width: 0.7, color: colors.accentColor})}), enabledBorder: new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.all(new ui.Radius.circular(2)), borderSide: new borders.BorderSide.new({width: 0.7, color: dart.dtest(this.isDarkTheme) ? colors.colorGrey.withOpacity(0.4) : colors.colorLightGrey})}), errorBorder: new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.all(new ui.Radius.circular(2)), borderSide: new borders.BorderSide.new({width: 0.7, color: colors.colorRed})}), focusedErrorBorder: new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.all(new ui.Radius.circular(2)), borderSide: new borders.BorderSide.new({width: 0.7, color: colors.colorRed})}), labelText: this.labelText, labelStyle: new text_style.TextStyle.new({fontSize: 14, color: dart.dtest(this.isDarkTheme) ? colors.textColorDark : colors.textColor}), hintText: this.hintText, hintStyle: new text_style.TextStyle.new({fontSize: 14}), counterText: "", contentPadding: new edge_insets.EdgeInsets.symmetric({vertical: 16, horizontal: 16}), prefixText: this.prefix, prefixStyle: new text_style.TextStyle.new({fontWeight: ui.FontWeight.bold, color: colors$.Colors.grey}), prefixIcon: this.icon, suffixIcon: this.suffixIcon != null ? new icon_button.IconButton.new({icon: this.suffixIcon, color: colors.colorGrey, onPressed: T.VoidToNvoid().as(this.suffixIconPressed), $creationLocationd_0dea112b090073317d4: C[0] || CT.C0}) : null}), $creationLocationd_0dea112b090073317d4: C[5] || CT.C5});
    }
  };
  (text_form_field$.EditText.new = function(opts) {
    let labelText = opts && 'labelText' in opts ? opts.labelText : null;
    let initialText = opts && 'initialText' in opts ? opts.initialText : null;
    let hintText = opts && 'hintText' in opts ? opts.hintText : null;
    let prefix = opts && 'prefix' in opts ? opts.prefix : null;
    let icon = opts && 'icon' in opts ? opts.icon : null;
    let type = opts && 'type' in opts ? opts.type : null;
    let maxLength = opts && 'maxLength' in opts ? opts.maxLength : null;
    let onChanged = opts && 'onChanged' in opts ? opts.onChanged : null;
    let validator = opts && 'validator' in opts ? opts.validator : null;
    let onSaved = opts && 'onSaved' in opts ? opts.onSaved : null;
    let obscureText = opts && 'obscureText' in opts ? opts.obscureText : null;
    let suffixIcon = opts && 'suffixIcon' in opts ? opts.suffixIcon : null;
    let suffixIconPressed = opts && 'suffixIconPressed' in opts ? opts.suffixIconPressed : null;
    let isDarkTheme = opts && 'isDarkTheme' in opts ? opts.isDarkTheme : null;
    let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
    this[labelText$] = labelText;
    this[initialText$] = initialText;
    this[hintText$] = hintText;
    this[prefix$] = prefix;
    this[icon$] = icon;
    this[type$] = type;
    this[maxLength$] = maxLength;
    this[onChanged$] = onChanged;
    this[validator$] = validator;
    this[onSaved$] = onSaved;
    this[obscureText$] = obscureText;
    this[suffixIcon$] = suffixIcon;
    this[suffixIconPressed$] = suffixIconPressed;
    this[isDarkTheme$] = isDarkTheme;
    text_form_field$.EditText.__proto__.new.call(this, {$creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
    ;
  }).prototype = text_form_field$.EditText.prototype;
  dart.addTypeTests(text_form_field$.EditText);
  dart.addTypeCaches(text_form_field$.EditText);
  dart.setMethodSignature(text_form_field$.EditText, () => ({
    __proto__: dart.getMethods(text_form_field$.EditText.__proto__),
    build: dart.fnType(dart.legacy(framework.Widget), [dart.legacy(framework.BuildContext)])
  }));
  dart.setLibraryUri(text_form_field$.EditText, I[0]);
  dart.setFieldSignature(text_form_field$.EditText, () => ({
    __proto__: dart.getFields(text_form_field$.EditText.__proto__),
    labelText: dart.finalFieldType(dart.legacy(core.String)),
    initialText: dart.finalFieldType(dart.legacy(core.String)),
    hintText: dart.finalFieldType(dart.legacy(core.String)),
    prefix: dart.finalFieldType(dart.legacy(core.String)),
    icon: dart.finalFieldType(dart.legacy(icon.Icon)),
    type: dart.finalFieldType(dart.legacy(text_input.TextInputType)),
    maxLength: dart.finalFieldType(dart.legacy(core.int)),
    onChanged: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, [dart.legacy(core.String)]))),
    validator: dart.finalFieldType(dart.legacy(dart.fnType(dart.legacy(core.String), [dart.legacy(core.String)]))),
    onSaved: dart.finalFieldType(dart.legacy(dart.fnType(dart.void, [dart.legacy(core.String)]))),
    obscureText: dart.finalFieldType(dart.legacy(core.bool)),
    suffixIcon: dart.finalFieldType(dart.legacy(icon.Icon)),
    suffixIconPressed: dart.finalFieldType(dart.legacy(core.Function)),
    isDarkTheme: dart.finalFieldType(dart.dynamic)
  }));
  dart.trackLibraries("packages/mainul_dev/widgets/text_form_field.dart", {
    "package:mainul_dev/widgets/text_form_field.dart": text_form_field$
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["text_form_field.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAKe;;;;;;IACA;;;;;;IACA;;;;;;IACA;;;;;;IACF;;;;;;IACS;;;;;;IACV;;;;;;IACiB;;;;;;IACM;;;;;;IACH;;;;;;IACnB;;;;;;IACA;;;;;;IACI;;;;;;IACT;;;;;;UAmBoB;AACxB,YAAO,sDACS,6BACH,oBACE,gCACC,sBACH,2BACA,2BACA,yBACF,qBACF,qCAAiB,iCACZ,wDACO,uDACgB,wDAEvB,+CAA6C,uCACtC,uDAEI,mCAAW,wCAChB,0DAGJ,oBAAc,AAAU,6BAAY,OAAO,wCAExC,uDAEM,mCAAW,wCAChB,+CAA6C,yCAEvC,uDAED,mCAAW,wCAChB,+CAA6C,gCAEhD,4BACC,8DAED,oBAAc,uBAAgB,8BAC/B,0BACC,2DACE,oBACc,kFAEf,0BACC,0CACY,2BACT,mCAEJ,uBACA,AAAW,0BACjB,sCACQ,wBACC,gDACI,mFAEb;IAEd;;;QAzEoB;QACX;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;IAbW;IACX;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AAdT;;EAcsB","file":"../../../../../../packages/mainul_dev/widgets/text_form_field.dart.lib.js"}');
  // Exports:
  return {
    widgets__text_form_field: text_form_field$
  };
}));

//# sourceMappingURL=text_form_field.dart.lib.js.map
